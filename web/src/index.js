// index.js
import { initScene, scene, renderer, updateShadowCamera } from './scene';
import { initAmmo, stepPhysics, updatePhysicsObjects } from './physics';
import { initNetwork } from './network';
import { objects, playerMesh} from './objects';
import { initCamera, camera, updateCamera, logCameraStatus, setQuadraticFactor } from './camera';
import { initGameStateManager, gameStateManager } from './gamestatemanager.js';
import { initGamepad, updateArrowHelper } from './gamepad'; 
import { updateSphereEmotion, showAggressionOnSphere, showFearOnSphere, showHappinessOnSphere, showNormalOnSphere } from './eyes.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –≥–ª–∞–∑
import { updateVisualEffects, initVisualController } from './visualController.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
import Stats from 'stats.js';


const stats = new Stats();
stats.showPanel(0); // 0: FPS, 1: ms, 2: memory
document.body.appendChild(stats.dom);


function animate() {
    stats.begin(); 
    

    stepPhysics(1 / 60);
    updatePhysicsObjects(objects);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É –∏–∑ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
    updateCamera();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–≥–ª–∞–∑–∞, –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ç.–¥.)
    updateVisualEffects();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å–≤–µ—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–∞–º–µ—Ä—ã, –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ
    updateShadowCamera(camera);

      // –û–±–Ω–æ–≤–ª—è–µ–º ArrowHelper
    if (gameStateManager.playerMesh) {
       updateArrowHelper(gameStateManager.playerMesh);
    }

    renderer.render(scene, camera);

    stats.end(); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–º–µ—Ä
    
    requestAnimationFrame(animate);
}

async function start() {
    console.log("Start");
    initScene();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–º–µ—Ä—É –∏–∑ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
    initCamera();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Å—Å—ã–ª–∫–∏
    const visualController = initVisualController();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...");
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    if (!document.getElementById('player-speed')) {
        console.log("–≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º...");
        const playerInfo = document.getElementById('player-info');
        
        if (!playerInfo) {
            console.error("–≠–ª–µ–º–µ–Ω—Ç player-info –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–µ–º –µ–≥–æ...");
            const playerInfoDiv = document.createElement('div');
            playerInfoDiv.id = 'player-info';
            playerInfoDiv.style.position = 'absolute';
            playerInfoDiv.style.bottom = '10px';
            playerInfoDiv.style.right = '10px';
            playerInfoDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
            playerInfoDiv.style.color = 'white';
            playerInfoDiv.style.padding = '8px 12px';
            playerInfoDiv.style.borderRadius = '6px';
            playerInfoDiv.style.fontFamily = 'monospace';
            playerInfoDiv.style.fontSize = '12px';
            playerInfoDiv.style.zIndex = '1000';
            playerInfoDiv.style.display = 'flex';
            playerInfoDiv.style.flexDirection = 'column';
            playerInfoDiv.style.gap = '4px';
            playerInfoDiv.style.minWidth = '160px';
            playerInfoDiv.style.border = '1px solid #00ff00';
            playerInfoDiv.style.opacity = '0.85';
            document.body.appendChild(playerInfoDiv);
        }
        
        const playerInfoElement = document.getElementById('player-info') || playerInfo;
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–±–æ—Ä–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        const titleDiv = document.createElement('div');
        titleDiv.id = 'instruments-title';
        titleDiv.textContent = 'üöÄ –ü–†–ò–ë–û–†–´';
        titleDiv.style.fontWeight = 'bold';
        titleDiv.style.textAlign = 'center';
        titleDiv.style.color = '#00ff00';
        titleDiv.style.marginBottom = '3px';
        titleDiv.style.fontSize = '11px';
        playerInfoElement.appendChild(titleDiv);
        
        // –°–∫–æ—Ä–æ—Å—Ç—å
        const speedDiv = document.createElement('div');
        speedDiv.id = 'player-speed';
        speedDiv.textContent = '‚ö° --';
        speedDiv.style.padding = '3px';
        speedDiv.style.backgroundColor = 'rgba(0, 128, 0, 0.3)';
        speedDiv.style.borderRadius = '3px';
        speedDiv.style.fontSize = '11px';
        playerInfoElement.appendChild(speedDiv);
        
        // –ú–∞—Å—Å–∞
        const massDiv = document.createElement('div');
        massDiv.id = 'player-mass';
        massDiv.textContent = '‚öñÔ∏è --';
        massDiv.style.padding = '3px';
        massDiv.style.backgroundColor = 'rgba(128, 128, 0, 0.3)';
        massDiv.style.borderRadius = '3px';
        massDiv.style.fontSize = '11px';
        playerInfoElement.appendChild(massDiv);
        
        // –°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞
        const statusDiv = document.createElement('div');
        statusDiv.id = 'player-status';
        statusDiv.textContent = 'üéÆ –ü–æ–∏—Å–∫...';
        statusDiv.style.padding = '3px';
        statusDiv.style.backgroundColor = 'rgba(128, 0, 128, 0.3)';
        statusDiv.style.borderRadius = '3px';
        statusDiv.style.fontSize = '11px';
        playerInfoElement.appendChild(statusDiv);
        
        // –û–±—ä–µ–∫—Ç—ã –≤ –º–∏—Ä–µ
        const objectsDiv = document.createElement('div');
        objectsDiv.id = 'world-objects';
        objectsDiv.textContent = 'üåç 0';
        objectsDiv.style.padding = '3px';
        objectsDiv.style.backgroundColor = 'rgba(0, 128, 128, 0.3)';
        objectsDiv.style.borderRadius = '3px';
        objectsDiv.style.fontSize = '11px';
        playerInfoElement.appendChild(objectsDiv);

        console.log("–£–ª—É—á—à–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–≥—Ä–æ–∫–∞ —Å–æ–∑–¥–∞–Ω—ã");
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–º–æ—Ü–∏–π –≥–ª–∞–∑
        createEyeTestInterface();
    } else {
        console.log("–≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç");
    }
    
    try {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
        await new Promise(resolve => setTimeout(resolve, 500));
        await initAmmo();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        const ws = await initNetwork()
            
        initGameStateManager(ws, scene);

        gameStateManager.on('gameInitialized', () => {
            console.warn('game initialized')
            animate();
        }); 

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Ammo.js:", error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–º–æ—Ü–∏–π –≥–ª–∞–∑
function createEyeTestInterface() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω –ª–∏ —É–∂–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (document.getElementById('eye-controls')) {
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–∞–∑–∞–º–∏
    const eyeControlsDiv = document.createElement('div');
    eyeControlsDiv.id = 'eye-controls';
    eyeControlsDiv.style.position = 'absolute';
    eyeControlsDiv.style.top = '10px';
    eyeControlsDiv.style.left = '10px';
    eyeControlsDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
    eyeControlsDiv.style.color = 'white';
    eyeControlsDiv.style.padding = '10px';
    eyeControlsDiv.style.borderRadius = '8px';
    eyeControlsDiv.style.fontFamily = 'Arial, sans-serif';
    eyeControlsDiv.style.fontSize = '12px';
    eyeControlsDiv.style.zIndex = '1000';
    eyeControlsDiv.style.border = '2px solid #00ff00';
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    const title = document.createElement('div');
    title.textContent = 'üëÄ –≠–ú–û–¶–ò–ò –ì–õ–ê–ó';
    title.style.fontWeight = 'bold';
    title.style.marginBottom = '8px';
    title.style.textAlign = 'center';
    title.style.color = '#00ff00';
    eyeControlsDiv.appendChild(title);
    
    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–º–æ—Ü–∏–π
    const emotions = [
        { name: '–û–±—ã—á–Ω–æ–µ', func: showNormalOnSphere, color: '#4CAF50' },
        { name: '–†–∞–¥–æ—Å—Ç—å', func: showHappinessOnSphere, color: '#FFD700' },
        { name: '–ì–Ω–µ–≤', func: showAggressionOnSphere, color: '#FF4444' },
        { name: '–°—Ç—Ä–∞—Ö', func: showFearOnSphere, color: '#9C27B0' }
    ];
    
    emotions.forEach(emotion => {
        const button = document.createElement('button');
        button.textContent = emotion.name;
        button.style.display = 'block';
        button.style.width = '100%';
        button.style.margin = '2px 0';
        button.style.padding = '6px';
        button.style.backgroundColor = emotion.color;
        button.style.color = 'white';
        button.style.border = 'none';
        button.style.borderRadius = '4px';
        button.style.cursor = 'pointer';
        button.style.fontSize = '11px';
        button.style.fontWeight = 'bold';
        
        button.addEventListener('click', emotion.func);
        
        // –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        button.addEventListener('mouseenter', () => {
            button.style.opacity = '0.8';
        });
        button.addEventListener('mouseleave', () => {
            button.style.opacity = '1';
        });
        
        eyeControlsDiv.appendChild(button);
    });
    
    // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º—ã—à–∏
    const mouseTrackingButton = document.createElement('button');
    mouseTrackingButton.textContent = 'üñ±Ô∏è –°–ª–µ–¥–∏—Ç—å –∑–∞ –º—ã—à—å—é: –í–ö–õ';
    mouseTrackingButton.style.display = 'block';
    mouseTrackingButton.style.width = '100%';
    mouseTrackingButton.style.margin = '4px 0';
    mouseTrackingButton.style.padding = '6px';
    mouseTrackingButton.style.backgroundColor = '#2196F3';
    mouseTrackingButton.style.color = 'white';
    mouseTrackingButton.style.border = 'none';
    mouseTrackingButton.style.borderRadius = '4px';
    mouseTrackingButton.style.cursor = 'pointer';
    mouseTrackingButton.style.fontSize = '10px';
    mouseTrackingButton.style.fontWeight = 'bold';
    
    let mouseTrackingEnabled = true;
    mouseTrackingButton.addEventListener('click', () => {
        mouseTrackingEnabled = !mouseTrackingEnabled;
        mouseTrackingButton.textContent = `üñ±Ô∏è –°–ª–µ–¥–∏—Ç—å –∑–∞ –º—ã—à—å—é: ${mouseTrackingEnabled ? '–í–ö–õ' : '–í–´–ö–õ'}`;
        mouseTrackingButton.style.backgroundColor = mouseTrackingEnabled ? '#2196F3' : '#666666';
        
        // –ü–æ–ª—É—á–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
        import('./visualController.js').then(module => {
            const controller = module.getVisualController();
            controller.setMouseTracking(mouseTrackingEnabled);
        });
    });
    
    eyeControlsDiv.appendChild(mouseTrackingButton);
    
    // –î–æ–±–∞–≤–ª—è–µ–º note
    const note = document.createElement('div');
    note.textContent = '–û–ì–†–û–ú–ù–´–ï –≥–ª–∞–∑–∞ —É–±–µ–≥–∞—é—Ç –æ—Ç –∫—É—Ä—Å–æ—Ä–∞ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É!';
    note.style.fontSize = '10px';
    note.style.color = '#00ff00';
    note.style.marginTop = '8px';
    note.style.textAlign = 'center';
    note.style.fontWeight = 'bold';
    eyeControlsDiv.appendChild(note);
    
    document.body.appendChild(eyeControlsDiv);
    
    console.log('[Eyes] –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω');
}

start();